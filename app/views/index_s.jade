doctype html
html
	head
		meta(charset='UTF-8')
		meta(http-equiv='X-UA-Compatible' content='IE=edge, chrome=1')
		meta(name='description' content='Shader')
		meta(name='renderer' content='webkit')
		meta(name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
		title Shader

		style.
			html, body {
				margin: 0px;
				width: 100%;
				height: 100%;
				overflow: hidden;
				font-family: monospace;
			}

			canvas {
				width: 100%;
				height: 100%;
			}

			#b {
				position: absolute;
				top: 10px;
				width: 100%;
				text-align: center;
				z-index: 2;
			}
		script#vs(type='notjs' src='/shader/fs.js')
		script#fs(type='notjs' src='/shader/vs.js')
	body
		script(src='/components/jquery/dist/jquery.min.js')
		script(src='/components/gl-matrix/dist/gl-matrix-min.js')
		script(src='/components/twgl.js/dist/twgl.min.js')
		script(src='/js/script.js')
		script.
			$(function() {
				"use strict";
				var gl = twgl.getWebGLContext(document.getElementById("c"));
				var programInfo = twgl.createProgramInfo(gl, ["vs", "fs"]);

				var arrays = {
					position: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],
				};
				var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);

				function render(time) {
					twgl.resizeCanvasToDisplaySize(gl.canvas);
					gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);
					var uniforms = {
						time: time * 0.001,
						resolution: [gl.canvas.width, gl.canvas.height],
					};
					gl.useProgram(programInfo.program);
					twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);
					twgl.setUniforms(programInfo, uniforms);
					twgl.drawBufferInfo(gl, gl.TRIANGLES, bufferInfo);
					requestAnimationFrame(render);
				}
				requestAnimationFrame(render);
			});
